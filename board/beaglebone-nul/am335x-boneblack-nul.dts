/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am335x-bone-common.dtsi"

/ {
	model = "TI AM335x BeagleBone Black";
	compatible = "ti,am335x-bone-black", "ti,am335x-bone", "ti,am33xx";
};

&ldo3_reg {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

&mmc1 {
	vmmc-supply = <&vmmcsd_fixed>;
};

&mmc2 {
	vmmc-supply = <&vmmcsd_fixed>;
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
	bus-width = <8>;
	status = "okay";
};

/* {{{ HDMI */
&am33xx_pinmux {
	nxp_hdmi_bonelt_pins: nxp_hdmi_bonelt_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9b0, PIN_OUTPUT_PULLDOWN | MUX_MODE3)	/* xdma_event_intr0 */
			AM33XX_IOPAD(0x8a0, PIN_OUTPUT | MUX_MODE0)		/* lcd_data0.lcd_data0 */
			AM33XX_IOPAD(0x8a4, PIN_OUTPUT | MUX_MODE0)		/* lcd_data1.lcd_data1 */
			AM33XX_IOPAD(0x8a8, PIN_OUTPUT | MUX_MODE0)		/* lcd_data2.lcd_data2 */
			AM33XX_IOPAD(0x8ac, PIN_OUTPUT | MUX_MODE0)		/* lcd_data3.lcd_data3 */
			AM33XX_IOPAD(0x8b0, PIN_OUTPUT | MUX_MODE0)		/* lcd_data4.lcd_data4 */
			AM33XX_IOPAD(0x8b4, PIN_OUTPUT | MUX_MODE0)		/* lcd_data5.lcd_data5 */
			AM33XX_IOPAD(0x8b8, PIN_OUTPUT | MUX_MODE0)		/* lcd_data6.lcd_data6 */
			AM33XX_IOPAD(0x8bc, PIN_OUTPUT | MUX_MODE0)		/* lcd_data7.lcd_data7 */
			AM33XX_IOPAD(0x8c0, PIN_OUTPUT | MUX_MODE0)		/* lcd_data8.lcd_data8 */
			AM33XX_IOPAD(0x8c4, PIN_OUTPUT | MUX_MODE0)		/* lcd_data9.lcd_data9 */
			AM33XX_IOPAD(0x8c8, PIN_OUTPUT | MUX_MODE0)		/* lcd_data10.lcd_data10 */
			AM33XX_IOPAD(0x8cc, PIN_OUTPUT | MUX_MODE0)		/* lcd_data11.lcd_data11 */
			AM33XX_IOPAD(0x8d0, PIN_OUTPUT | MUX_MODE0)		/* lcd_data12.lcd_data12 */
			AM33XX_IOPAD(0x8d4, PIN_OUTPUT | MUX_MODE0)		/* lcd_data13.lcd_data13 */
			AM33XX_IOPAD(0x8d8, PIN_OUTPUT | MUX_MODE0)		/* lcd_data14.lcd_data14 */
			AM33XX_IOPAD(0x8dc, PIN_OUTPUT | MUX_MODE0)		/* lcd_data15.lcd_data15 */
			AM33XX_IOPAD(0x8e0, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_vsync.lcd_vsync */
			AM33XX_IOPAD(0x8e4, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_hsync.lcd_hsync */
			AM33XX_IOPAD(0x8e8, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_pclk.lcd_pclk */
			AM33XX_IOPAD(0x8ec, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_ac_bias_en.lcd_ac_bias_en */
		>;
	};
	nxp_hdmi_bonelt_off_pins: nxp_hdmi_bonelt_off_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9b0, PIN_OUTPUT_PULLDOWN | MUX_MODE3)	/* xdma_event_intr0 */
		>;
	};
};

&lcdc {
	status = "okay";
	port {
		lcdc_0: endpoint@0 {
			remote-endpoint = <&hdmi_0>;
		};
	};
};

&i2c0 {
	tda19988: tda19988 {
		compatible = "nxp,tda998x";
		reg = <0x70>;

		pinctrl-names = "default", "off";
		pinctrl-0 = <&nxp_hdmi_bonelt_pins>;
		pinctrl-1 = <&nxp_hdmi_bonelt_off_pins>;

		ports {
			port@0 {
				hdmi_0: endpoint@0 {
					remote-endpoint = <&lcdc_0>;
				};
			};
		};
	};
};
/* }}} */

/* {{{ McASP 4-CH Output */

&cpu0_opp_table {
	/*
	 * All PG 2.0 silicon may not support 1GHz but some of the early
	 * BeagleBone Blacks have PG 2.0 silicon which is guaranteed
	 * to support 1GHz OPP so enable it for PG 2.0 on this board.
	 */
	oppnitro@1000000000 {
		opp-supported-hw = <0x06 0x0100>;
	};

};

&rtc {
	system-power-controller;
};


&am33xx_pinmux {
	mcasp0_4ch_pins_default: mcasp0_4ch_pins_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9ac, PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (A14) mcasp0_ahclkx.mcasp0_ahclkx */
			AM33XX_IOPAD(0x990, PIN_OUTPUT_PULLDOWN | MUX_MODE0 ) /* (A13) mcasp0_aclkx.mcasp0_aclkx */
			AM33XX_IOPAD(0x994, PIN_OUTPUT_PULLDOWN | MUX_MODE0 ) /* (B13) mcasp0_fsx.mcasp0_fsx */
			AM33XX_IOPAD(0x998, PIN_OUTPUT_PULLDOWN | MUX_MODE0 ) /* (D12) mcasp0_axr0.mcasp0_axr0 */
			AM33XX_IOPAD(0x9a8, PIN_OUTPUT_PULLDOWN | MUX_MODE0 ) /* (D13) mcasp0_axr1.mcasp0_axr1 */
		>;
	};
	mcasp0_4ch_pins_sleep: mcasp0_4ch_pins_sleep {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9ac, PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* (A14) mcasp0_ahclkx.mcasp0_ahclkx */
			AM33XX_IOPAD(0x990, PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* (A13) mcasp0_aclkx.mcasp0_aclkx */
			AM33XX_IOPAD(0x994, PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* (B13) mcasp0_fsx.mcasp0_fsx */
			AM33XX_IOPAD(0x998, PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* (D12) mcasp0_axr0.mcasp0_axr0 */
			AM33XX_IOPAD(0x9a8, PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* (D13) mcasp0_axr1.mcasp0_axr1 */
		>;
	};
};

#if 0
	XXX: D13 and D14 are on P9#41, it must be disabled.
	gpio1[27] must be in GPIO mode to expose 24.576 MHz clock on P9#25
#endif
&clkout2_pin {
	pinctrl-single,pins = <
		AM33XX_IOPAD(0x9b4, PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* (D14) xdma_event_intr1.gpio0[20] */
		AM33XX_IOPAD(0x86c, PIN_OUTPUT | MUX_MODE7 ) /* (V17) gpmc_a11.gpio1[27] */
	>;
};

&mcasp0 {
	#sound-dai-cells = <0>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&mcasp0_4ch_pins_default>;
	pinctrl-1 = <&mcasp0_4ch_pins_sleep>;
	status = "okay";
	op-mode = <0>;
	tdm-slots = <2>;
	serial-dir = <1 1 0 0>;
	tx-num-evt = <32>;
	rx-num-evt = <32>;
};

/ {
#if 0
	clk_mcasp0_fixed: clk_mcasp0_fixed {
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <24576000>;
	};

	clk_mcasp0: clk_mcasp0 {
		#clock-cells = <0>;
		compatible = "gpio-gate-clock";
		clocks = <&clk_mcasp0_fixed>;
		enable-gpios = <&gpio1 27 0>; /* BeagleBone Black Clk enable on GPIO1_27 */
	};
#endif

	audio_codec_left: pcm5102a@0 {
		compatible = "ti,pcm5102a";
		status = "okay";
	};

	audio_codec_right: pcm5102a@1 {
		compatible = "ti,pcm5102a";
		status = "okay";
	};

	sound {
		compatible = "nulbbb,audio";
		nulbbb,model = "TI BBB McASP0";
		nulbbb,mcasp-controller = <&mcasp0>;
		nulbbb,audio-codec = <&audio_codec_left>, <&audio_codec_right>;
		nulbbb,codec-clock-rate = <24576000>;
		nulbbb,codec-name = "pcm5102a-hifi", "pcm5102a-hifi";
		status = "okay";
	};

};

/* }}} */

/* {{{ GPS UART + GPIO PPS */

&am33xx_pinmux {
	uart1_gps_pins_default: uart1_gps_pins_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x980, PIN_INPUT_PULLUP | MUX_MODE0) /* (D16) uart1_rxd.uart1_rxd */
			AM33XX_IOPAD(0x984, PIN_OUTPUT_PULLDOWN | MUX_MODE0) /* (D15) uart1_txd.uart1_txd */
		>;
	};
	gpio1_gps_pps_pins_default: gpio1_gps_pps_pins_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x878, PIN_INPUT | MUX_MODE7) /* (U18) gpmc_be1n.gpio1[28] */
		>;
	};
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_gps_pins_default>;
	status = "okay";
};

/ {
	pps {
		compatible = "pps-gpio";
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <&gpio1_gps_pps_pins_default>;
		gpios = <&gpio1 28 0>;
	};
};

/* }}} */

/* {{{ SPI LCD Touchscreen */

#if 0

/* #define SPI0 */
&am33xx_pinmux {

#ifdef SPI0
	spi0_display_pins_default: spi0_display_pins_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x950, PIN_OUTPUT_PULLDOWN | MUX_MODE0 ) /* (A17) spi0_sclk.spi0_sclk */
			AM33XX_IOPAD(0x954, PIN_INPUT_PULLUP | MUX_MODE0 ) /* (B17) spi0_d0.spi0_d0 */
			AM33XX_IOPAD(0x958, PIN_OUTPUT_PULLDOWN | MUX_MODE0 ) /* (B16) spi0_d1.spi0_d1 */
			AM33XX_IOPAD(0x95c, PIN_OUTPUT_PULLUP | MUX_MODE0 ) /* (A16) spi0_cs0.spi0_cs0 */
#if 0
			AM33XX_IOPAD(0x960, PIN_OUTPUT_PULLUP | MUX_MODE0 ) /* (C15) spi0_cs1.spi0_cs1 */
#endif
		>;
	};
#endif
#ifdef SPI1
	spi1_display_pins_default: spi1_display_pins_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x990, PIN_OUTPUT_PULLUP | MUX_MODE3 ) /* (A13) mcasp0_aclkx.spi1_sclk */
			AM33XX_IOPAD(0x994, PIN_INPUT_PULLUP | MUX_MODE3 ) /* (B13) mcasp0_fsx.spi1_d0 */
			AM33XX_IOPAD(0x998, PIN_OUTPUT_PULLUP | MUX_MODE3 ) /* (D12) mcasp0_axr0.spi1_d1 */
			AM33XX_IOPAD(0x99c, PIN_OUTPUT_PULLUP | MUX_MODE3 ) /* (C12) mcasp0_ahclkr.spi1_cs0 */
		>;
	};
#endif
	xpt2046_irq_pins_default: xpt2046_irq_pins_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x87c, PIN_INPUT | MUX_MODE7) /* (V6) gpmc_csn0.gpio1[29] */
		>;
	};
};

#ifdef SPI0
&spi0 {

	pinctrl-names = "default";
	pinctrl-0 = <&spi0_display_pins_default>;
	status = "okay";

    ili9486: ili9486@0 {
        compatible = "ilitek,ili9486";
        spi-max-frequency = <32000000>;
        reg = <0>;
        buswidth = <9>;
        debug = <3>;
        status = "okay";
    };

    xpt2046: xpt2046@1 {
        compatible = "ti,ads7846";
        spi-max-frequency = <1000000>;
        reg = <1>;
        interrupt-parent = <&gpio1>;
        interrupts = <29 0>;
        pendown-gpio = <&gpio1 29 0>;
        vcc-supply = <&ldo4_reg>;
        status = "okay";
    };

};
#endif

#ifdef SPI1
&spi1 {

	pinctrl-names = "default";
	pinctrl-0 = <&spi1_display_pins_default>;
	status = "okay";

	ili9486: ili9486@0 {
		compatible = "ilitek,ili9486";
		spi-max-frequency = <32000000>;
		reg = <0>;
		buswidth = <9>;
		debug = <3>;
		status = "okay";
	};

	xpt2046: xpt2046@1 {
		compatible = "ti,ads7846";
		spi-max-frequency = <1000000>;
		reg = <1>;
		interrupt-parent = <&gpio1>;
		interrupts = <29 0>;
		pendown-gpio = <&gpio1 29 0>;
		vcc-supply = <&ldo4_reg>;
		status = "okay";
	};

};
#endif

#endif

/* }}} */

/* vim: foldmethod=marker */
